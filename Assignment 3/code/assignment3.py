# -*- coding: utf-8 -*-
"""Assignment 3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zcWfAMqZnA4GP_NNvfAedidXDWvWMWCM
"""

import numpy as np
from scipy.stats import bernoulli
import matplotlib.pyplot as plt
sim_arr = np.zeros(shape = 100, dtype = int)
prob_heads = float(1/2)
count = 0
th_p = '%.2f'%(2/3)
for i in range (0,10000):
  sim_arr = bernoulli.rvs(size = 100, p = prob_heads) #to generate the random variable for a head denoted by 1
  j = 0
  while(sim_arr[j]!=1):
    j +=1
  if((j+1)%2 == 1): #here j+1 is used as try:1 would be on array index 0 and so on...
    count += 1     #to count the number of times 1st head occurs at an odd try
sim_p = '%.2f'%(count/10000)
print('Probability that odd number of tries are required to get the first head is:')
print('Simulated Probability:',sim_p)
print('Theoretical Probability:',th_p)

cases = ["i"]
x = np.arange(len(cases))
plt.bar(x+0.0, 2/3, color = 'red', width = 0.25, label = 'Theoretical')
plt.bar(x+1.0, count/10000, color = 'yellow', width = 0.25, label = 'Simulation')

plt.xlabel('Cases')
plt.ylabel('Probabilities')

plt.legend()
plt.show()